$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
require 'gprs'

require 'minitest/autorun'

# Unit ID: 1016 (test unit)
def packet_single
  [0x28,0xC3,0x48,0xA1,0x11,0x5D,0x78,0x1F,0xF8,0x3,0xE9,0xF5,0x32,0xD7,0xBD,0x70,0x0,0x10,0x8D,0xCF,0x81,0x3,0xC8,0x6B,0x2,0x6D,0x87,0x1,0x0,0x0,0x0,0x1,0xC5,0x29]
end

# Unit ID: 4 (test unit)
def packet_multiple
  [
    [0x28,0xC6,0x10,0xA8,0xA0,0xC1,0x93,0x22,0x1F,0x4,0xAD,0x95,0x3F,0x5C,0x25,0x9E,0x0,0x3,0x54,0x66,0x6,0x1D,0x78,0x90,0x2,0x6F,0x9F,0x1,0x24,0x4,0x0,0x0,0x0,0x1,0xD5,0x29],
    [0x28,0xC7,0x10,0xA8,0xA0,0xD1,0xA1,0x22,0x1F,0x4,0xB3,0x95,0x3F,0x5B,0x25,0x9E,0x0,0x3,0x60,0x90,0x7B,0x1F,0x78,0x90,0x2,0x6F,0x9F,0x1,0x24,0x4,0x0,0x0,0x0,0x1,0x52,0x29],
    [0x28,0x81,0x10,0xA8,0x0,0x0,0x0,0x0,0x0,0x4,0x0,0x0,0x80,0x0,0x0,0x0,0x0,0x10,0x88,0x5D,0x2,0x6F,0x9F,0x1,0x24,0x4,0x0,0x0,0x0,0x1,0xAA,0x29],
    [0x28,0x82,0x10,0xA8,0x20,0x59,0xB0,0x22,0x1F,0x4,0xB5,0x95,0x3F,0x5D,0x25,0x9E,0x0,0x10,0x8D,0x56,0x2,0x6F,0x9F,0x1,0x24,0x4,0x0,0x0,0x0,0x1,0x2A,0x29],
    [0x28,0x81,0x10,0xA8,0x0,0x0,0x0,0x0,0x0,0x4,0x0,0x0,0x80,0x0,0x0,0x0,0x0,0x10,0x88,0x50,0x2,0x6F,0x9F,0x1,0x24,0x4,0x0,0x0,0x0,0x1,0xA7,0x29]
  ]
end

# Packet #1: Report Type = 8, Ext Type = 240 (FC Transaction)
# Packet #2: Report Type = 6 (Compressed Report)
# Packet #3: Report Type = 9 (Compressed + Coded Report)
def packet_other
  [
    "0x28 0xCA 0x10 0xA8 0xE0 0x1C 0xC0 0x4F 0x1D 0x64 0x85 0x97 0x3F 0x5F 0x27 0x9E 0x0 0x88 0x6E 0x90 0x7B 0x12 0x78 0x90 0xF0 0x3C 0x10 0x90 0x0 0x0 0x5C 0x2D 0x0 0x0 0x79 0x29",
    "0x28 0xCD 0x26 0xE0 0x2C 0x99 0xFC 0x1D 0x66 0xB1 0x6C 0x3F 0xA4 0x2D 0x9E 0x6 0x87 0x5D 0x1 0x12 0x10 0x90 0x82 0x90 0x55 0x5 0x0 0x0 0x6 0x55 0x3 0x82 0x0 0x6 0x55 0x5 0x82 0x82 0x6 0xD3 0x29",
    "0x28 0xE9 0x10 0xA9 0xE0 0x24 0x2C 0x5F 0x1D 0x64 0x8F 0x98 0x3F 0x61 0x27 0x9E 0x21 0x87 0x5 0x60 0x66 0x6 0x12 0x78 0x90 0x55 0x5 0xB 0x9 0x21 0x55 0x3 0x83 0x5 0x1A 0x59 0x25 0x17 0x81 0x93 0x0 0x67 0x29"
  ]
end

def parse_report_other(log = true)
  parse_method = "C Extension"
  if log
    puts ""
    puts "# Parsing several non-additional-io packets (#{parse_method})..."
  end

  packet_other.each do |packet|
    reports = GprsC.parse_report(packet)
    if log
      puts reports
      puts ""
    end
  end
end

def parse_report_single(log = true, bindata = true)
  parse_method = ""
  if bindata
    parse_method = "BinData"
  else
    parse_method = "C Extension"
  end

  if log
    puts ""
    puts "# Parsing 1 packet (#{parse_method})..."
  end

  reports = nil
  if bindata
    reports = Gprs.parse_report(packet_single)
  else
    reports = GprsC.parse_report(packet_single, log)
  end

  if log
    puts reports
    puts ""
  end
end

def parse_report_multiple(log = true, bindata = true)
  parse_method = ""
  if bindata
    parse_method = "BinData"
  else
    parse_method = "C Extension"
  end

  if log
    puts ""
    puts "# Parsing #{packet_multiple.length} packets (#{parse_method})..."
  end

  packet_multiple.each do |packet|
    reports = nil
    if bindata
      reports = Gprs.parse_report(packet)
    else
      reports = GprsC.parse_report(packet, log)
    end
    if log
      puts reports
      puts ""
    end
  end
end
